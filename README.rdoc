== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.


Resources:
https://boards.greenhouse.io/strava/jobs/192704#.Vw1OvBMrKRs
https://developers.google.com/maps/documentation/javascript/
https://strava.github.io/api/v3/streams/
https://developers.google.com/maps/documentation/javascript/shapes#polyline_add
https://www.strava.com/routes/4634590
https://github.com/jaredholdcroft/strava-api-v3 (Ruby gem)
https://github.com/UnbounDev/node-strava-v3 (node package)
https://www.npmjs.com/package/strava-v3 (node package - same as above??)
https://github.com/stevenchanin/strava-api (Different Ruby gem for wrapping Strava JSON objects as Ruby class instances)
http://fancypixel.github.io/blog/2015/01/28/react-plus-flux-backed-by-rails-api/ (React/rails-api Oauth)
http://fredguest.com/2015/03/06/building-a-stateless-rails-api-with-react-and-twitter-oauth/ (React + stateless rails-api server with twitter oauth!!!)

Google Maps & Strava APIsâ€™ polylines may have the same encoding:
http://gis.stackexchange.com/questions/83550/google-maps-decoded-polylines-showing-up-incorrectly

Rails authentication with oauth demo!!!
http://www.sitepoint.com/rails-authentication-oauth-2-0-omniauth/
use in conjunction with omniauth-strava gem!
https://github.com/thogg4/omniauth-strava
to get twitter api to deal with localhost:3000 settings, had to set:
-website: http://127.0.0.1:3000
-callback url: http://127.0.0.1:3000/auth/twitter/callback
dealing with concealing env variables in rails using figaro:
http://railsapps.github.io/rails-environment-variables.html
